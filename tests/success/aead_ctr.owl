locality alice

func f 
    arity 0

name x : nonce @ alice
counter N @ alice
name k : st_aead Name(x)
    aad x. (x == f())
    nonce N
    nonce_pattern *
    @ alice

def tst() @ alice : Unit = 
    inc_counter N;
    let x = get_counter N in 
    let c = st_aead_enc<N>(get(k), get(x), f()) in 
    output c;
    corr_case k in
    input h in 
    case st_aead_dec(get(k), c, h, x)
     | None => ()
     | Some _y => 
        let y : if sec(k) then (_:Name(x){h == f()}) else Data<adv> = _y in
        ()



